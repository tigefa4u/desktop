name: CI

on:
  push:
    branches:
      - development
      - linux
      - 'linux-release-*'
    tags:
      - 'release-*.*.*-linux*'
  pull_request:
    branches:
      - linux
      - 'linux-release-*'

env:
  NODE_VERSION: 20.11.1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      RELEASE_CHANNEL: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository || github.repository }}
          ref: ${{ inputs.ref }}
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn
      - run: yarn validate-electron-version
      - run: yarn lint
      - run: yarn validate-changelog
      - name: Ensure a clean working directory
        run: git diff --name-status --exit-code
  build:
    name: ${{ matrix.friendlyName }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-2019, ubuntu-20.04]
        arch: [x64, arm64]
        include:
          - os: macos-13
            friendlyName: macOS
          - os: windows-2019
            friendlyName: Windows
          - os: ubuntu-20.04
            friendlyName: Ubuntu
        exclude:
          - os: ubuntu-20.04
            arch: arm64
    timeout-minutes: 60
    env:
      RELEASE_CHANNEL: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository || github.repository }}
          ref: ${{ inputs.ref }}
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install and build dependencies
        run: yarn
        env:
          npm_config_arch: ${{ matrix.arch }}
          TARGET_ARCH: ${{ matrix.arch }}
      - name: Build production app
        run: yarn build:prod
        env:
          npm_config_arch: ${{ matrix.arch }}
          TARGET_ARCH: ${{ matrix.arch }}
      - name: Prepare testing environment
        if: matrix.arch == 'x64'
        run: yarn test:setup
        env:
          npm_config_arch: ${{ matrix.arch }}
      - name: Run unit tests
        if: matrix.arch == 'x64'
        run: yarn test:unit
      - name: Run script tests
        if: matrix.arch == 'x64'
        run: yarn test:script
      - name: Package application
        run: yarn run package
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.arch == 'x64' }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if:
          ${{ matrix.os == 'ubuntu-20.04' && startsWith(github.ref,
          'refs/tags/') }}
        with:
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.txt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
